% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-2.R
\name{stat_handle_outliers}
\alias{stat_handle_outliers}
\title{Handle Outliers in a Stat Object or Data Frame}
\usage{
stat_handle_outliers(
  object,
  save_cleaned = TRUE,
  handle_method = c("replace", "remove", "keep", "capping"),
  lower_quantile = 0.05,
  upper_quantile = 0.95,
  group_col = "group"
)
}
\arguments{
\item{object}{An object of class 'Stat' or a data frame containing the data to process.}

\item{save_cleaned}{A boolean indicating whether to save the cleaned data in the 'Stat' object (default is TRUE).}

\item{handle_method}{A method to handle outliers. Options include "replace", "remove", "keep", and "capping" (default is "replace").}

\item{lower_quantile}{The lower quantile used for capping outliers (default is 0.05).}

\item{upper_quantile}{The upper quantile used for capping outliers (default is 0.95).}

\item{group_col}{The name of the grouping column in the data (default is "group").}
}
\value{
If the input is a 'Stat' object, the updated 'Stat' object with cleaned data is returned.
If the input is a data frame, the cleaned data frame is returned.
}
\description{
This function handles outliers in either a 'Stat' object or a data frame. It applies the
chosen outlier handling method (e.g., removing, replacing, keeping, or capping outliers)
to the data and returns the cleaned data. If the input is a 'Stat' object, the function
updates the 'Stat' object with the cleaned data.
}
\examples{
# Example 1: Using a Stat object
stat_object <- Stat$new(clean.data = your_data_frame, group_col = "group")
cleaned_stat <- stat_handle_outliers(stat_object,
                                     save_cleaned = TRUE,
                                     handle_method = "remove",
                                     lower_quantile = 0.05,
                                     upper_quantile = 0.95)
# The 'Stat' object is updated with the cleaned data.

# Example 2: Using a data frame
data_frame <- data.frame(
  gene1 = c(1, 2, 3, 100, 5),
  gene2 = c(2, 4, 6, 100, 8),
  group = c("A", "A", "B", "B", "A")
)
cleaned_data <- stat_handle_outliers(data_frame,
                                     handle_method = "capping",
                                     lower_quantile = 0.05,
                                     upper_quantile = 0.95)
# The cleaned data frame is returned with outliers capped.
}
